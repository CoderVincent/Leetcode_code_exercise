class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        if (obstacleGrid == null || obstacleGrid.length == 0) return 0;

        int m = obstacleGrid.length, n = obstacleGrid[0].length;   
    
        int dp[][] = new int[m][n];
        
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (i == 0 && j == 0) {
                    dp[i][j] = obstacleGrid[0][0] == 1 ? 0 : 1;
                } else if (i == 0) {
                    if (obstacleGrid[i][j] == 1)
                        dp[0][j] = 0;
                    else
                        dp[0][j] = dp[0][j-1];                    
                } else if (j == 0) {
                    if (obstacleGrid[i][j] == 1)
                        dp[i][0] = 0;
                    else
                        dp[i][j] = dp[i-1][j];   
                } else {
                    if (obstacleGrid[i][j] == 1)
                        dp[i][j] = 0;
                    else 
                        dp[i][j] = dp[i][j-1] + dp[i-1][j];
                }
            }
        }
        
        return dp[m-1][n-1];
    }
}